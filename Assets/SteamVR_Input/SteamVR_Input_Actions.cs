// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Input
    {
        
        private static SteamVR_Action_Boolean p___actions_default_in_InteractUI;
        
        private static SteamVR_Action_Boolean p___actions_default_in_Teleport;
        
        private static SteamVR_Action_Boolean p___actions_default_in_GrabPinch;
        
        private static SteamVR_Action_Boolean p___actions_default_in_GrabGrip;
        
        private static SteamVR_Action_Pose p___actions_default_in_Pose;
        
        private static SteamVR_Action_Single p___actions_default_in_Squeeze;
        
        private static SteamVR_Action_Vibration p___actions_default_out_Haptic;
        
        private static SteamVR_Action_Vector2 p___actions_platformer_in_Move;
        
        private static SteamVR_Action_Boolean p___actions_platformer_in_Jump;
        
        private static SteamVR_Action_Vector2 p___actions_buggy_in_Steering;
        
        private static SteamVR_Action_Single p___actions_buggy_in_Throttle;
        
        private static SteamVR_Action_Boolean p___actions_buggy_in_Brake;
        
        private static SteamVR_Action_Boolean p___actions_buggy_in_Reset;
        
        public static SteamVR_Action_Boolean __actions_default_in_InteractUI
        {
            get
            {
                return Valve.VR.SteamVR_Input.p___actions_default_in_InteractUI.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean __actions_default_in_Teleport
        {
            get
            {
                return Valve.VR.SteamVR_Input.p___actions_default_in_Teleport.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean __actions_default_in_GrabPinch
        {
            get
            {
                return Valve.VR.SteamVR_Input.p___actions_default_in_GrabPinch.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean __actions_default_in_GrabGrip
        {
            get
            {
                return Valve.VR.SteamVR_Input.p___actions_default_in_GrabGrip.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose __actions_default_in_Pose
        {
            get
            {
                return Valve.VR.SteamVR_Input.p___actions_default_in_Pose.GetCopy <SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Single __actions_default_in_Squeeze
        {
            get
            {
                return Valve.VR.SteamVR_Input.p___actions_default_in_Squeeze.GetCopy <SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Vibration __actions_default_out_Haptic
        {
            get
            {
                return Valve.VR.SteamVR_Input.p___actions_default_out_Haptic.GetCopy <SteamVR_Action_Vibration>();
            }
        }
        
        public static SteamVR_Action_Vector2 __actions_platformer_in_Move
        {
            get
            {
                return Valve.VR.SteamVR_Input.p___actions_platformer_in_Move.GetCopy <SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean __actions_platformer_in_Jump
        {
            get
            {
                return Valve.VR.SteamVR_Input.p___actions_platformer_in_Jump.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 __actions_buggy_in_Steering
        {
            get
            {
                return Valve.VR.SteamVR_Input.p___actions_buggy_in_Steering.GetCopy <SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Single __actions_buggy_in_Throttle
        {
            get
            {
                return Valve.VR.SteamVR_Input.p___actions_buggy_in_Throttle.GetCopy <SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean __actions_buggy_in_Brake
        {
            get
            {
                return Valve.VR.SteamVR_Input.p___actions_buggy_in_Brake.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean __actions_buggy_in_Reset
        {
            get
            {
                return Valve.VR.SteamVR_Input.p___actions_buggy_in_Reset.GetCopy <SteamVR_Action_Boolean>();
            }
        }
        
        public static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[]
            {
                    Valve.VR.SteamVR_Input.__actions_default_in_InteractUI,
                    Valve.VR.SteamVR_Input.__actions_default_in_Teleport,
                    Valve.VR.SteamVR_Input.__actions_default_in_GrabPinch,
                    Valve.VR.SteamVR_Input.__actions_default_in_GrabGrip,
                    Valve.VR.SteamVR_Input.__actions_default_in_Pose,
                    Valve.VR.SteamVR_Input.__actions_default_in_Squeeze,
                    Valve.VR.SteamVR_Input.__actions_default_out_Haptic,
                    Valve.VR.SteamVR_Input.__actions_platformer_in_Move,
                    Valve.VR.SteamVR_Input.__actions_platformer_in_Jump,
                    Valve.VR.SteamVR_Input.__actions_buggy_in_Steering,
                    Valve.VR.SteamVR_Input.__actions_buggy_in_Throttle,
                    Valve.VR.SteamVR_Input.__actions_buggy_in_Brake,
                    Valve.VR.SteamVR_Input.__actions_buggy_in_Reset};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[]
            {
                    Valve.VR.SteamVR_Input.__actions_default_in_InteractUI,
                    Valve.VR.SteamVR_Input.__actions_default_in_Teleport,
                    Valve.VR.SteamVR_Input.__actions_default_in_GrabPinch,
                    Valve.VR.SteamVR_Input.__actions_default_in_GrabGrip,
                    Valve.VR.SteamVR_Input.__actions_default_in_Pose,
                    Valve.VR.SteamVR_Input.__actions_default_in_Squeeze,
                    Valve.VR.SteamVR_Input.__actions_platformer_in_Move,
                    Valve.VR.SteamVR_Input.__actions_platformer_in_Jump,
                    Valve.VR.SteamVR_Input.__actions_buggy_in_Steering,
                    Valve.VR.SteamVR_Input.__actions_buggy_in_Throttle,
                    Valve.VR.SteamVR_Input.__actions_buggy_in_Brake,
                    Valve.VR.SteamVR_Input.__actions_buggy_in_Reset};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[]
            {
                    Valve.VR.SteamVR_Input.__actions_default_out_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[]
            {
                    Valve.VR.SteamVR_Input.__actions_default_out_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[]
            {
                    Valve.VR.SteamVR_Input.__actions_default_in_Pose};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[]
            {
                    Valve.VR.SteamVR_Input.__actions_default_in_InteractUI,
                    Valve.VR.SteamVR_Input.__actions_default_in_Teleport,
                    Valve.VR.SteamVR_Input.__actions_default_in_GrabPinch,
                    Valve.VR.SteamVR_Input.__actions_default_in_GrabGrip,
                    Valve.VR.SteamVR_Input.__actions_platformer_in_Jump,
                    Valve.VR.SteamVR_Input.__actions_buggy_in_Brake,
                    Valve.VR.SteamVR_Input.__actions_buggy_in_Reset};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[]
            {
                    Valve.VR.SteamVR_Input.__actions_default_in_Squeeze,
                    Valve.VR.SteamVR_Input.__actions_buggy_in_Throttle};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[]
            {
                    Valve.VR.SteamVR_Input.__actions_platformer_in_Move,
                    Valve.VR.SteamVR_Input.__actions_buggy_in_Steering};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[0];
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[]
            {
                    Valve.VR.SteamVR_Input.__actions_default_in_InteractUI,
                    Valve.VR.SteamVR_Input.__actions_default_in_Teleport,
                    Valve.VR.SteamVR_Input.__actions_default_in_GrabPinch,
                    Valve.VR.SteamVR_Input.__actions_default_in_GrabGrip,
                    Valve.VR.SteamVR_Input.__actions_default_in_Squeeze,
                    Valve.VR.SteamVR_Input.__actions_platformer_in_Move,
                    Valve.VR.SteamVR_Input.__actions_platformer_in_Jump,
                    Valve.VR.SteamVR_Input.__actions_buggy_in_Steering,
                    Valve.VR.SteamVR_Input.__actions_buggy_in_Throttle,
                    Valve.VR.SteamVR_Input.__actions_buggy_in_Brake,
                    Valve.VR.SteamVR_Input.__actions_buggy_in_Reset};
        }
        
        public static void PreInitActions()
        {
            Valve.VR.SteamVR_Input.p___actions_default_in_InteractUI = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/InteractUI")));
            Valve.VR.SteamVR_Input.p___actions_default_in_Teleport = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/Teleport")));
            Valve.VR.SteamVR_Input.p___actions_default_in_GrabPinch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/GrabPinch")));
            Valve.VR.SteamVR_Input.p___actions_default_in_GrabGrip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/default/in/GrabGrip")));
            Valve.VR.SteamVR_Input.p___actions_default_in_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create <SteamVR_Action_Pose>("/actions/default/in/Pose")));
            Valve.VR.SteamVR_Input.p___actions_default_in_Squeeze = ((SteamVR_Action_Single)(SteamVR_Action.Create <SteamVR_Action_Single>("/actions/default/in/Squeeze")));
            Valve.VR.SteamVR_Input.p___actions_default_out_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create <SteamVR_Action_Vibration>("/actions/default/out/Haptic")));
            Valve.VR.SteamVR_Input.p___actions_platformer_in_Move = ((SteamVR_Action_Vector2)(SteamVR_Action.Create <SteamVR_Action_Vector2>("/actions/platformer/in/Move")));
            Valve.VR.SteamVR_Input.p___actions_platformer_in_Jump = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/platformer/in/Jump")));
            Valve.VR.SteamVR_Input.p___actions_buggy_in_Steering = ((SteamVR_Action_Vector2)(SteamVR_Action.Create <SteamVR_Action_Vector2>("/actions/buggy/in/Steering")));
            Valve.VR.SteamVR_Input.p___actions_buggy_in_Throttle = ((SteamVR_Action_Single)(SteamVR_Action.Create <SteamVR_Action_Single>("/actions/buggy/in/Throttle")));
            Valve.VR.SteamVR_Input.p___actions_buggy_in_Brake = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/buggy/in/Brake")));
            Valve.VR.SteamVR_Input.p___actions_buggy_in_Reset = ((SteamVR_Action_Boolean)(SteamVR_Action.Create <SteamVR_Action_Boolean>("/actions/buggy/in/Reset")));
        }
    }
}
